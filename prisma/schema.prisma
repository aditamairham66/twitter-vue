// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email        String
  name         String?
  username     String  @unique
  password     String
  profileImage String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation refresh token with users
  refreshToken RefreshToken[]

  // relation tweet with users
  tweet Tweet[]

  // relation media tweet with users
  mediaTweet MediaTweet[]
}

model RefreshToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  token String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation refresh token with users
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id])
}

model Tweet {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  text String

  // relation tweet with users
  authorId String @db.ObjectId
  user User @relation(fields: [authorId], references: [id])

  // relation tweet with tweet
  replyToId String? @db.ObjectId
  replyTo   Tweet?  @relation("replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies   Tweet[] @relation("replies")

  // relation media tweet with tweet
  mediaTweet MediaTweet[]
}

model MediaTweet {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url String
  providerPublicId String

  // relation media tweet with users
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id])

  // relation media tweet with tweet
  tweetId String @db.ObjectId
  tweet Tweet @relation(fields: [tweetId], references: [id])
}